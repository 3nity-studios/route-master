{
    "version": 8,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 30,
        "patch": 2
    },
    "configurePresets": [
        {
            "name": "cmake-pedantic",
            "hidden": true,
            "warnings": {
                "dev": true,
                "deprecated": true,
                "uninitialized": false,
                "unusedCli": true,
                "systemVars": true
            },
            "errors": {
                "dev": false,
                "deprecated": true
            }
        },
        {
            "name": "dev-mode",
            "hidden": true,
            "inherits": "cmake-pedantic",
            "cacheVariables": {
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
                "RM_DEVELOPER_MODE": "ON"
            }
        },
        {
            "name": "cppcheck",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr;--suppress=*:*_deps/*"
            }
        },
        {
            "name": "clang-tidy",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=^${sourceDir}/"
            }
        },
        {
            "name": "ci-std",
            "description": "This preset makes sure the project actually builds with at least the specified standard",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_EXTENSIONS": "OFF",
                "CMAKE_CXX_STANDARD": "17",
                "CMAKE_CXX_STANDARD_REQUIRED": "ON"
            }
        },
        {
            "name": "flags-gcc-clang",
            "description": "These flags are supported by both GCC and Clang",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wshadow -Wnon-virtual-dtor -pedantic -Wold-style-cast -Wcast-align -Wunused -Woverloaded-virtual -Wpedantic -Wconversion -Wsign-conversion -Wmisleading-indentation -Wnull-dereference -Wdouble-promotion -Wformat=2 -Wimplicit-fallthrough -fdiagnostics-color=always",
                "CMAKE_EXE_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now,-z,nodlopen",
                "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now,-z,nodlopen"
            }
        },
        {
            "name": "flags-mingw",
            "description": "These flags are specific to MinGW GCC",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "generator": "MinGW Makefiles",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "-mwindows -Wall -Wextra -Wshadow -Wnon-virtual-dtor -pedantic -Wold-style-cast -Wcast-align -Wunused -Woverloaded-virtual -Wpedantic -Wconversion -Wsign-conversion -Wmisleading-indentation -Wduplicated-cond -Wduplicated-branches -Wlogical-op -Wnull-dereference -Wuseless-cast -Wdouble-promotion -Wformat=2 -Wimplicit-fallthrough -fdiagnostics-color=always -Werror"
            }
        },
        {
            "name": "flags-msvc",
            "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "/permissive /W4 /w14640 /w14242 /w14254 /w14263 /w14265 /w14287 /we4289 /w14296 /w14311 /w14545 /w14546 /w14547 /w14549 /w14555 /w14619 /w14640 /w14826 /w14905 /w14906 /w14928 /WX",
                "CMAKE_EXE_LINKER_FLAGS": "/machine:x64 /guard:cf"
            }
        },
        {
            "name": "ci-linux",
            "inherits": [
                "flags-gcc-clang",
                "ci-std"
            ],
            "generator": "Unix Makefiles",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "ci-sanitize",
            "binaryDir": "${sourceDir}/build/sanitize",
            "inherits": [
                "ci-linux",
                "dev-mode"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Sanitize",
                "CMAKE_CXX_FLAGS_SANITIZE": "-U_FORTIFY_SOURCE -O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common"
            }
        },
        {
            "name": "ci-build",
            "binaryDir": "${sourceDir}/build",
            "hidden": true
        },
        {
            "name": "ci-multi-config",
            "description": "Speed up multi-config generators by generating only one configuration instead of the defaults",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CONFIGURATION_TYPES": "Release"
            }
        },
        {
            "name": "ci-ubuntu",
            "inherits": [
                "ci-build",
                "ci-linux",
                "clang-tidy",
                "cppcheck",
                "dev-mode"
            ]
        }
    ]
}